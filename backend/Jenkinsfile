pipeline {
  agent any

  environment {
    SONAR_TOKEN   = credentials('sonar-token-id')
    GCR_CREDS     = 'gcr-credentials'
    GCP_SA_KEY    = 'gcp-sa-key'

    AR_PROJECT    = "abstract-tract-383807"
    AR_REGION     = "europe-west2"
    AR_REPO_NAME  = "backend-images"
    PROJECT_ID    = "${AR_PROJECT}"
    CLUSTER_NAME  = "manhattan-cluster"
    LOCATION      = "europe-west2-a"

    IMAGE_TAG     = "${BRANCH_NAME}-${BUILD_ID}"

    GCP_ACCOUNTNAME = "your-service-account@${AR_PROJECT}.iam.gserviceaccount.com"
  }

  triggers {
    pollSCM('H/5 * * * *')
  }

  stages {
    stage('Checkout') {
      steps {
        checkout scm
      }
    }

    stage('Docker Build & Push') {
      steps {
        script {
          docker.withRegistry("https://${AR_REGION}-docker.pkg.dev/${AR_PROJECT}/${AR_REPO_NAME}", "${GCR_CREDS}") {
            sh 'chmod +x backend/gcp-docker.sh'
            // Separate the variable exports into one sh block
            sh """
              export AR_PROJECT="${AR_PROJECT}"
              export AR_REGION="${AR_REGION}"
              export AR_REPO_NAME="${AR_REPO_NAME}"
              export IMAGE_TAG="${IMAGE_TAG}"
            """
            // Execute the script in a separate sh block
            sh 'backend/gcp-docker.sh'
          }
        }
      }
    }

    stage('Deploy to GKE') {
      steps {
        withCredentials([file(credentialsId: "${GCP_SA_KEY}", variable: 'KEYFILE_PATH')]) {
          sh 'chmod +x backend/kube-deploy.sh'
          sh """
            export PROJECT_ID="${PROJECT_ID}"
            export CLUSTER_NAME="${CLUSTER_NAME}"
            export LOCATION="${LOCATION}"
            export GCP_ACCOUNTNAME="${GCP_ACCOUNTNAME}"
            # REMOVE THIS LINE: export GCP_KEYFILE_PATH="${KEYFILE_PATH}"
            
            export IMAGE_URL="${AR_REGION}-docker.pkg.dev/${AR_PROJECT}/${AR_REPO_NAME}/backend:latest"
            # KEEP DEBUG LINES FOR NOW TO CONFIRM KEYFILE_PATH is still valid here
            echo "DEBUG: GCP_KEYFILE_PATH is: \$KEYFILE_PATH" # Note: now using KEYFILE_PATH directly for debug
            test -f "\$KEYFILE_PATH" && echo "DEBUG: Key file exists and is a regular file." || echo "DEBUG: Key file does NOT exist or is not a regular file."
            test -r "\$KEYFILE_PATH" && echo "DEBUG: Key file is readable." || echo "DEBUG: Key file is NOT readable."
          """
          // CHANGE THIS LINE: Pass KEYFILE_PATH as an argument
          sh 'backend/kube-deploy.sh "${KEYFILE_PATH}"'
        }
      }
    }

    stage('Build & Test') {
      steps {
        withMaven(maven: 'M3') {
          sh 'mvn clean package -DskipTests=false'
        }
      }
    }

    stage('SonarQube Analysis') {
      steps {
        withMaven(maven: 'M3') {
          withSonarQubeEnv('SonarQube') {
            sh 'mvn clean verify sonar:sonar -Dsonar.login=${SONAR_TOKEN}'
          }
        }
      }
    }

    stage('Quality Gate') {
      steps {
        waitForQualityGate abortPipeline: true
      }
    }
  }

  post {
    success { echo "✅ Backend deployed: ${IMAGE_TAG}" }
    failure { echo "❌ Backend pipeline failed" }
  }
}
