pipeline {
  agent any

  environment {
    SONAR_TOKEN   = credentials('sonar-token-id')
    GCR_CREDS     = 'gcr-credentials' // This credential is used for Docker login to Artifact Registry
    GCP_SA_KEY    = 'gcp-sa-key'

    AR_PROJECT    = "abstract-tract-383807" // Your GCP Project ID
    AR_REGION     = "europe-west2"          // Artifact Registry region (e.g., europe-west2)
    AR_REPO_NAME  = "backend-images"        // Your Artifact Registry repository name (e.g., backend-images)
    PROJECT_ID    = "${AR_PROJECT}"
    CLUSTER_NAME  = "manhattan-cluster"
    LOCATION      = "europe-west2-a"        // GKE cluster zone

    IMAGE_TAG     = "${BRANCH_NAME}-${BUILD_ID}"

    GCP_ACCOUNTNAME = "your-service-account@${AR_PROJECT}.iam.gserviceaccount.com"
  }

  triggers {
    pollSCM('H/5 * * * *')
  }

  stages {
    stage('Checkout') {
      steps {
        checkout scm
      }
    }

    stage('SonarQube Analysis') {
      steps {
        withSonarQubeEnv('SonarQube') {
          sh 'mvn clean verify sonar:sonar -Dsonar.login=${SONAR_TOKEN}'
        }
      }
    }

    stage('Quality Gate') {
      steps {
        waitForQualityGate abortPipeline: true
      }
    }

    stage('Build & Test') {
      steps {
        sh 'mvn clean package -DskipTests=false'
      }
    }

    stage('Docker Build & Push') {
      steps {
        script {
          docker.withRegistry("https://${AR_REGION}-docker.pkg.dev/${AR_PROJECT}/${AR_REPO_NAME}", "${GCR_CREDS}") {
            sh 'chmod +x gcp-docker.sh'
            sh """
              export AR_PROJECT="${AR_PROJECT}"
              export AR_REGION="${AR_REGION}"
              export AR_REPO_NAME="${AR_REPO_NAME}"
              export IMAGE_TAG="${IMAGE_TAG}"
              ./gcp-docker.sh
            """
          }
        }
      }
    }

    stage('Deploy to GKE') {
      steps {
        withCredentials([file(credentialsId: "${GCP_SA_KEY}", variable: 'KEYFILE_PATH')]) {
          sh 'chmod +x kube-deploy.sh'
          sh """
            export PROJECT_ID="${PROJECT_ID}"
            export CLUSTER_NAME="${CLUSTER_NAME}"
            export LOCATION="${LOCATION}"
            export GCP_ACCOUNTNAME="${GCP_ACCOUNTNAME}"
            export GCP_KEYFILE_PATH="${KEYFILE_PATH}"
            export IMAGE_URL="${AR_REGION}-docker.pkg.dev/${AR_PROJECT}/${AR_REPO_NAME}/backend:${IMAGE_TAG}"
            ./kube-deploy.sh
          """
        }
      }
    }
  }

  post {
    success { echo "✅ Backend deployed: ${IMAGE_TAG}" }
    failure { echo "❌ Backend pipeline failed" }
  }
}